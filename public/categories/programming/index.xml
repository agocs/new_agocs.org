<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Agocs.org</title>
    <link>https://agocs.org/categories/programming/</link>
    <description>Recent content in Programming on Agocs.org</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 Feb 2018 11:50:00 -0500</lastBuildDate>
    
	<atom:link href="https://agocs.org/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using command line tools to analyze a crash</title>
      <link>https://agocs.org/2018/02/using-command-line-tools-to-analyze-a-crash/</link>
      <pubDate>Sat, 10 Feb 2018 11:50:00 -0500</pubDate>
      
      <guid>https://agocs.org/2018/02/using-command-line-tools-to-analyze-a-crash/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://agocs.smugmug.com/Other/Norway/i-SLPwjgK/A&#34;&gt;&lt;img src=&#34;https://photos.smugmug.com/Other/Norway/i-SLPwjgK/1/808af843/XL/IMG_20170924_070751-XL.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At &lt;a href=&#34;https://nautiluslabs.co&#34;&gt;Nautilus Labs&lt;/a&gt;, we&amp;rsquo;re advancing the efficiency
of maritime transportation by collecting data and recognizing patterns. An
interesting side effect of this is that we have insight into a ships&amp;rsquo; actions,
not just day-by-day, but second-by-second. It&amp;rsquo;s not as simple as dots on a
map either; engine power, wind, rate-of-turn, it&amp;rsquo;s all important.&lt;/p&gt;

&lt;p&gt;We worked with one of our clients to take advantage of this recently. A few
days ago, one of their ships struck a jetty during a berthing maneuver.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Introducing Uluru</title>
      <link>https://agocs.org/2015/08/introducing-uluru/</link>
      <pubDate>Thu, 20 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://agocs.org/2015/08/introducing-uluru/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/3/3e/Uluru_Panorama.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t work for &lt;a href=&#34;https://www.backstopsolutions.com/careers&#34;&gt;Backstop&lt;/a&gt; any more (but you should), but back when I did, we discovered we had no idea how long it took our users to load our tools. Hell, we couldn&amp;rsquo;t even figure out how many clicks per month we had! I was working with New Relic trying to get a quote from them, and the best I could do was 2 million plus or minus 800 thousand. We had insight into how long it took our servers to respond to requests, but no thought was given to DNS, loading outside resources, rendering DOM, etc.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mergesort on all the spices in the kitchen</title>
      <link>https://agocs.org/2013/05/mergesort-on-all-the-spices-in-the-kitchen/</link>
      <pubDate>Sun, 05 May 2013 04:05:48 +0000</pubDate>
      
      <guid>https://agocs.org/2013/05/mergesort-on-all-the-spices-in-the-kitchen/</guid>
      <description>It bothered me that the spices in the kitchen were out of order. So, I sorted them using my favorite sorting algorithm, Mergesort. My cats helped.

I started with an un-ordered list of spices.

Then I started to divide the list up into smaller lists. Panther helped.
31 elements became 15 and 16.
Then 7, 8, 8, 8.
Then 3, 4, 4, 4, 4, 4, 4, 4.
Then 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2</description>
    </item>
    
  </channel>
</rss>